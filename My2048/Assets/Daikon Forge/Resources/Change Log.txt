Daikon Forge GUI v1.0.15 (hotfix)

* Resolved exception with dfList.GetEnumerator() on iOS platforms
* Resolved null reference exception in dfGUIManager.HitTest() when controls are removed from container
* Controls which are moved at runtime will have a kinematic RigidBody added "on demand" to reduce physics cost
* Resolved issue where dfLabel control with AutoSize or AutoHeight in a ScrollPanel would not be clipped when text was updated
* Resolved some issues where the wrong control reference was assigned to the dfMouseEventArgs.Source property (touch processing)


------------------------
Daikon Forge GUI v1.0.15

* Resolved new compile errors when building for Windows Store
* Resolved mismatched Profiler.BeginSample()/Profile.EndSample() in Rich Text Label
* Refactored mouse and touch processing and dfGUIManager.HitTest() to not use Physics.RaycastAll()
* dfGUIManager now caches triangle buffers when possible, resulting in fewer memory allocations needed
* Refactored many dfControl.Signal() calls to include the [this] pointer, resulting in fewer memory allocations
* Made gesture event handlers public to work around Unity bug on WP8
* Eliminated memory allocations in dfControl.updateCollider()
* Improved memory usage of tween components
* Resolved issue in dfControl.OnIsEnabledChanged() which might use incorrect value in event notifications
* Resolved naming conflict between System.Text.RegularExpressions.Match and user-defined Match class
* Added cropping to dfTextureSprite control
* Rich Text Label will now use the default font if a markup element specifies an invalid font
* Rich Text Label now supports Auto Height - Will resize vertically to match contents
* Added dfControl.AutoFocus property - If set to TRUE, control will automatically gain focus when enabled or shown
* Controls now correctly detect when re-parented to a different dfGUIManager hierarchy
* Fixed issue with mouse/touch processing when using multiple dfGUIManager instances
* Removed all instances of default parameter values in method declarations - Now compiles in Unity's Monodevelop distribution
* Sliders now correctly handle arrow keys when set to Vertical orientation or Horizontal orientation with RightToLeft
* Resolved an issue where control ZOrder would change at startup or when the parent was enabled
* KeyEventBinding inspector now checks the event handler signature for compatibility
* Inspectors now use yellow instead of red to indicate important fields that are missing values when using dark editor skin
* Added dfInputManger.UseMouse property - Can disable mouse input on platforms that don't use mouse
* Fixed float.RoundToNearest() extension method, used by controls such as Slider to quantize/round values
* Added "Auto Download" property to dfWebSprite inspector, fixed AutoDownload handling
* Added DownloadComplete and DownloadError events to dfWebSprite class
* Resolved InvalidOperationException in dfMaterialEditor on OSX platforms
* dfControl.GetManager() no longer returns NULL when manager not found - Resolves some issues with prefabs, enable/disable issues
* Resolved issue with scrolling dfRichTextLabel control on WP8 platform
* Resolved an issue with prefabs which contain a dfGUIManager instance not properly applying anchor information
* Resolved several issues with prefab instantiation, include zorder issues and anchor issues


------------------------
Daikon Forge GUI v1.0.14

NOTE: This update is a "hotfix" that resolves important touch interaction issues and Windows Phone 8 issues

* Resolved issues where some controls were not rendering correctly after being shown when initially hidden
* Implemented workaround for Unity bug (Reflection on WP8 with Unity 4.3.3+) on Windows Phone 8
* Resolved issue with touch processing - controls that were moved after tapping no longer responded to taps
* Removed caching of control's GameObject - Provided zero performance benefit, contributed to bugs
* Texture Sprite inspector now uses Texture instead of Texture2D, allows use of RenderTexture
* Can dynamically re-assign Tween component at runtime
* Made modifications to "click through" blocking code that should prove to be more consistent
* Create Script wizard now properly handles byref parameters in event handler signatures
* dfFollowObject now sorts controls by distance from camera, more performant frustum culling
